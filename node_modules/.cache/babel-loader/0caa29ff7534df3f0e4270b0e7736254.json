{"ast":null,"code":"import _regeneratorRuntime from \"/home/ec2-user/weather-app-indicator/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ec2-user/weather-app-indicator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ec2-user/weather-app-indicator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ec2-user/weather-app-indicator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ec2-user/weather-app-indicator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ec2-user/weather-app-indicator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ec2-user/weather-app-indicator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ec2-user/weather-app-indicator/src/App.js\";\nimport React from \"react\";\nimport Title from \"./components/Title\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nvar API_Key = \"xxxxxx\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&APPID=\").concat(API_Key));\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n\n                if (city && country) {\n                  _this.setState({\n                    temperature: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    humidity: data.main.humidity,\n                    description: data.weather[0].description,\n                    error: \"\"\n                  });\n                } else {\n                  _this.setState({\n                    temperature: undefined,\n                    city: undefined,\n                    country: undefined,\n                    humidity: undefined,\n                    description: undefined,\n                    error: \"Please enter the value!\"\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-5 title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-7 form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temperature: this.state.temperature,\n        humidity: this.state.humidity,\n        city: this.state.city,\n        country: this.state.country,\n        description: this.state.description,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\n;\nexport default App;","map":{"version":3,"sources":["/home/ec2-user/weather-app-indicator/src/App.js"],"names":["React","Title","Form","Weather","API_Key","App","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","fetch","api_call","json","data","setState","main","temp","name","sys","weather","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Title from \"./components/Title\";\nimport Form from \"./components/Form\"\nimport Weather from \"./components/Weather\"\n\nconst API_Key = \"xxxxxx\";\n\nclass App extends React.Component {\n\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_Key}`);\n    const data = await api_call.json();\n\n    if (city && country) {\n\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n\n      }\n\n      );\n    }\n\n\n    else {\n\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter the value!\"\n\n      }\n\n      );\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-xs-5 title-container\">\n                  <Title />\n                </div>\n                <div className=\"col-xs-7 form-container\">\n                  <Form getWeather={this.getWeather} />\n                  <Weather \n                    temperature={this.state.temperature} \n                    humidity={this.state.humidity}\n                    city={this.state.city}\n                    country={this.state.country}\n                    description={this.state.description}\n                    error={this.state.error}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n};\n\n\n\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}